name: CI

on: [push]

env:
  evomaster-version: 1.1.1
  release-jdk: 16
  retention-days: 3


# This build is quite expensive (1ish hour), so we run it whole only on 1 JVM version, and 1 OS.
# Recall that we also build on CircleCI, with different configurations.
# For the moment, we need to support JVM 8 and 11, with 17 when it comes out.
# EM should run an all OSs. As our main development machines are Windows and Mac, just
# testing whole build with all E2E only on Linux should be fine.

jobs:

  build:
    runs-on: ubuntu-latest
    # Currently does not like Docker...
    #    runs-on: windows-latest

    steps:

      # Checkout code
      - uses: actions/checkout@v2

      # Build/test for .Net
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Build with .Net
        run: dotnet build --configuration Release
      - name: Tests for .Net
        run: dotnet test

      # Build/test for JavaScript
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm ci
        working-directory: ./client-js/evomaster-client-js
      - run: npm run build
        working-directory: ./client-js/evomaster-client-js
      - run: npm run test
        working-directory: ./client-js/evomaster-client-js
      - run: npm ci
        working-directory: ./client-js/integration-tests
      - run: npm run build
        working-directory: ./client-js/integration-tests
      - run: npm run test
        working-directory: ./client-js/integration-tests

      # Build/test for JDK
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
#        TODO remember put back tests!!!
        run: mvn clean verify --fae -DskipTests
        env:
          CI_env: GithubAction

      - name: Upload evomaster.jar
        uses: actions/upload-artifact@v2
        with:
          name: evomaster.jar
          path: core/target/evomaster.jar
          retention-days: ${{retention-days}}

      # E2E for JS. Must be run AFTER the JS and Core builds
      - name: E2E for JavaScript
        run:  bash ./client-js/e2e-tests/e2e.sh


      # Upload coverage results
      - name: Upload coverage to CodeCov
        run: curl -s https://codecov.io/bash | bash


      #Only once coverage is uploaded, we try to build with other versions of Java, as "mvn clean" would delete those reports
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Compile with JDK 11
        run: mvn clean verify -DskipTests


  windows:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Setup JDK ${{release-jdk}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{release-jdk}}
      - name: Download fat jar
        uses: actions/download-artifact@v2
        with:
          name: evomaster.jar
          path: core/target
      - name: Build installation file
        shell: bash
        run: bash makeExecutable.sh WINDOWS
      - name: Upload installation file
        uses: actions/upload-artifact@v2
        with:
          name: msi
          path: release/evomaster-${{evomaster-version}}.msi
          retention-days: ${{retention-days}}


  osx:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Setup JDK ${{release-jdk}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{release-jdk}}
      - name: Download fat jar
        uses: actions/download-artifact@v2
        with:
          name: evomaster.jar
          path: core/target
      - name: Build installation file
        shell: bash
        run: bash makeExecutable.sh OSX
      - name: Upload installation file
        uses: actions/upload-artifact@v2
        with:
          name: dmg
          path: release/evomaster-${{evomaster-version}}.dmg
          retention-days: ${{retention-days}}


  debian:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup JDK ${{release-jdk}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{release-jdk}}
      - name: Download fat jar
        uses: actions/download-artifact@v2
        with:
          name: evomaster.jar
          path: core/target
      - name: Build installation file
        shell: bash
        run: bash makeExecutable.sh DEBIAN
      - name: Upload installation file
        uses: actions/upload-artifact@v2
        with:
          name: deb
          path: release/evomaster-${{evomaster-version}}.deb
          retention-days: ${{retention-days}}
