<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>

        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.2.0"/>
        <PackageReference Include="xunit" Version="2.4.0"/>
        <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0"/>
        <PackageReference Include="coverlet.collector" Version="1.0.1"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\src\EvoMaster.Instrumentation\EvoMaster.Instrumentation.csproj"/>
        <ProjectReference Include="..\EvoMaster.Instrumentation.Examples\EvoMaster.Instrumentation.Examples.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="bin-temp\**"/>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Remove="bin-temp\**"/>
    </ItemGroup>

    <ItemGroup>
        <None Remove="bin-temp\**"/>
    </ItemGroup>

    <Target Name="Instrument" AfterTargets="Build">
        
        <!-- Remove temp folder in case it exists -->
        <Exec Command="rm -rf $(ProjectDir)bin-temp"/>
        <!-- Copy generated files after build into the temp directory, then generate the instrumented dll -->
        <Exec Command="cp -a $(OutputPath). $(ProjectDir)bin-temp"/>
        <!-- Run the instrumentation and specify bin-temp as output directory, 
        but first create a runtimeconfig.json since it is needed for EvoMaster.Instrumentation.dll to be runnable -->
        <Exec Command="cd $(OutputPath);cp EvoMaster.Instrumentation.Tests.runtimeconfig.json EvoMaster.Instrumentation.runtimeconfig.json;
    dotnet EvoMaster.Instrumentation.dll $(ProjectDir)bin-temp/EvoMaster.Instrumentation.Examples.dll $(ProjectDir)bin-temp"/>

        <!-- Remove the non-instrumented SUT's dll since it prevents the execution of the instrumented dll as intended (no idea why so far)
             Then rename the runtimeconfig.json to make the newly generated instrumented dll runnable-->
        <Exec Command="cd $(ProjectDir)bin-temp;
     rm EvoMaster.Instrumentation.Examples.dll EvoMaster.Instrumentation.Examples;
      cp EvoMaster.Instrumentation.Tests.runtimeconfig.json InstrumentedSut.runtimeconfig.json;"/>

        <!-- Fill the bin directory with contents from the temp folder -->
        <Exec Command="rm -rf $(OutputPath)*;cp -a $(ProjectDir)bin-temp/. $(OutputPath)"/>
        <!-- Rename the InstrumentedSut to the original name of the SUT (and its runtimeconfig.json as well)  -->
        <Exec Command="cd $(OutputPath);mv InstrumentedSut.runtimeconfig.json EvoMaster.Instrumentation.Examples.runtimeconfig.json;mv InstrumentedSut.dll EvoMaster.Instrumentation.Examples.dll"/>
        
    </Target>

</Project>
