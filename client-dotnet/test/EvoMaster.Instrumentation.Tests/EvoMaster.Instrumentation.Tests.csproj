<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>

        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.2.0"/>
        <PackageReference Include="xunit" Version="2.4.0"/>
        <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0"/>
        <PackageReference Include="coverlet.collector" Version="1.0.1"/>
        <PackageReference Include="EvoMaster.Instrumentation" Version="1.1.1-SNAPSHOT"/>
    </ItemGroup>

    <ItemGroup>
        <!--        <ProjectReference Include="..\..\src\EvoMaster.Instrumentation\EvoMaster.Instrumentation.csproj"/>-->
        <ProjectReference Include="..\EvoMaster.Instrumentation.Examples\EvoMaster.Instrumentation.Examples.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="bin-temp\**"/>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Remove="bin-temp\**"/>
    </ItemGroup>

    <ItemGroup>
        <None Remove="bin-temp\**"/>
    </ItemGroup>


    <ItemGroup>
        <TempDirectory Include="$(ProjectDir)bin-temp"/>
        <OutputContent Include="$(OutputPath)*"/>
        <TestRuntimeConfig Include="$(OutputPath)EvoMaster.Instrumentation.Tests.runtimeconfig.json"/>
        <InstrumentationRuntimeConfig Include="$(OutputPath)EvoMaster.Instrumentation.runtimeconfig.json"/>
    </ItemGroup>

    <Target Name="Instrument" AfterTargets="Build">
        <!-- Remove temp folder in case it exists to make sure everything gets updated -->
        <RemoveDir Directories="@(TempDirectory)"/>
        <Copy SourceFiles="@(OutputContent)" DestinationFolder="@(TempDirectory)"/>
        
        <!-- create a runtimeconfig.json because it is needed for EvoMaster.Instrumentation.dll to be runnable -->
        <Copy SourceFiles="@(TestRuntimeConfig)" DestinationFiles="@(InstrumentationRuntimeConfig)"/>

        <!-- Run the instrumentation and specify bin-temp as output directory -->
        <Exec Command="cd $(OutputPath);
                       dotnet EvoMaster.Instrumentation.dll @(TempDirectory)/EvoMaster.Instrumentation.Examples.dll @(TempDirectory)"/>
    </Target>

    
    <!-- This section is for enabling the test methods pass. The actual instrumentation is done before-->
    <ItemGroup>
        <TempContent Include="$(ProjectDir)bin-temp/."/>
    </ItemGroup>
    <Target Name="TestInstrumentation" AfterTargets="Build">
        <!-- Fill the bin directory with contents from the temp folder -->
        <Delete Files="@(OutputContent)"/>
        <Exec Command="cp -a @(TempContent) $(OutputPath)"/>
        <!-- Rename the InstrumentedSut to the original name of the SUT (and its runtimeconfig.json as well)  -->
        <Exec Command="cd $(OutputPath);mv InstrumentedSut.runtimeconfig.json EvoMaster.Instrumentation.Examples.runtimeconfig.json;mv InstrumentedSut.dll EvoMaster.Instrumentation.Examples.dll"/>

    </Target>
</Project>
